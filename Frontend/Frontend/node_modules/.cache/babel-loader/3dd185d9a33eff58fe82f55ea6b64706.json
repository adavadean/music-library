{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ada\\\\MusicLibrary\\\\Frontend\\\\src\\\\components\\\\search_bar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { search } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Search = () => {\n  _s();\n  const [query, setQuery] = useState('');\n  const [results, setResults] = useState({\n    artists: [],\n    albums: []\n  });\n  useEffect(() => {\n    if (query.length > 2) {\n      const fetchData = async () => {\n        const result = await search(query);\n        setResults(result.data);\n      };\n      fetchData();\n    } else {\n      setResults({\n        artists: [],\n        albums: []\n      });\n    }\n  }, [query]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search...\",\n      value: query,\n      onChange: e => setQuery(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), results.artists.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Artists\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: results.artists.map(artist => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [artist.name, /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: artist.albums.map(album => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [album.title, /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: album.songs.map((song, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [song.title, \" - \", song.length]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 42,\n                  columnNumber: 27\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 23\n              }, this)]\n            }, album._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 17\n          }, this)]\n        }, artist._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), results.albums.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Albums\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: results.albums.map(album => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [album.title, /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: album.songs.map((song, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [song.title, \" - \", song.length]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this)]\n        }, album._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(Search, \"nMc9QEX++RvKo1H+XtMDeYZCRxE=\");\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","useEffect","search","jsxDEV","_jsxDEV","Search","_s","query","setQuery","results","setResults","artists","albums","length","fetchData","result","data","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","map","artist","name","album","title","songs","song","index","_id","_c","$RefreshReg$"],"sources":["C:/Users/Ada/MusicLibrary/Frontend/src/components/search_bar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { search } from '../services/api';\r\n\r\nconst Search = () => {\r\n  const [query, setQuery] = useState('');\r\n  const [results, setResults] = useState({ artists: [], albums: [] });\r\n\r\n  useEffect(() => {\r\n    if (query.length > 2) {\r\n      const fetchData = async () => {\r\n        const result = await search(query);\r\n        setResults(result.data);\r\n      };\r\n\r\n      fetchData();\r\n    } else {\r\n      setResults({ artists: [], albums: [] });\r\n    }\r\n  }, [query]);\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search...\"\r\n        value={query}\r\n        onChange={(e) => setQuery(e.target.value)}\r\n      />\r\n      {results.artists.length > 0 && (\r\n        <div>\r\n          <h2>Artists</h2>\r\n          <ul>\r\n            {results.artists.map((artist) => (\r\n              <li key={artist._id}>\r\n                {artist.name}\r\n                <ul>\r\n                  {artist.albums.map((album) => (\r\n                    <li key={album._id}>\r\n                      {album.title}\r\n                      <ul>\r\n                        {album.songs.map((song, index) => (\r\n                          <li key={index}>{song.title} - {song.length}</li>\r\n                        ))}\r\n                      </ul>\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n      {results.albums.length > 0 && (\r\n        <div>\r\n          <h2>Albums</h2>\r\n          <ul>\r\n            {results.albums.map((album) => (\r\n              <li key={album._id}>\r\n                {album.title}\r\n                <ul>\r\n                  {album.songs.map((song, index) => (\r\n                    <li key={index}>{song.title} - {song.length}</li>\r\n                  ))}\r\n                </ul>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,MAAM,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC;IAAEW,OAAO,EAAE,EAAE;IAAEC,MAAM,EAAE;EAAG,CAAC,CAAC;EAEnEX,SAAS,CAAC,MAAM;IACd,IAAIM,KAAK,CAACM,MAAM,GAAG,CAAC,EAAE;MACpB,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;QAC5B,MAAMC,MAAM,GAAG,MAAMb,MAAM,CAACK,KAAK,CAAC;QAClCG,UAAU,CAACK,MAAM,CAACC,IAAI,CAAC;MACzB,CAAC;MAEDF,SAAS,CAAC,CAAC;IACb,CAAC,MAAM;MACLJ,UAAU,CAAC;QAAEC,OAAO,EAAE,EAAE;QAAEC,MAAM,EAAE;MAAG,CAAC,CAAC;IACzC;EACF,CAAC,EAAE,CAACL,KAAK,CAAC,CAAC;EAEX,oBACEH,OAAA;IAAAa,QAAA,gBACEb,OAAA;MACEc,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,WAAW;MACvBC,KAAK,EAAEb,KAAM;MACbc,QAAQ,EAAGC,CAAC,IAAKd,QAAQ,CAACc,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,EACDlB,OAAO,CAACE,OAAO,CAACE,MAAM,GAAG,CAAC,iBACzBT,OAAA;MAAAa,QAAA,gBACEb,OAAA;QAAAa,QAAA,EAAI;MAAO;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChBvB,OAAA;QAAAa,QAAA,EACGR,OAAO,CAACE,OAAO,CAACiB,GAAG,CAAEC,MAAM,iBAC1BzB,OAAA;UAAAa,QAAA,GACGY,MAAM,CAACC,IAAI,eACZ1B,OAAA;YAAAa,QAAA,EACGY,MAAM,CAACjB,MAAM,CAACgB,GAAG,CAAEG,KAAK,iBACvB3B,OAAA;cAAAa,QAAA,GACGc,KAAK,CAACC,KAAK,eACZ5B,OAAA;gBAAAa,QAAA,EACGc,KAAK,CAACE,KAAK,CAACL,GAAG,CAAC,CAACM,IAAI,EAAEC,KAAK,kBAC3B/B,OAAA;kBAAAa,QAAA,GAAiBiB,IAAI,CAACF,KAAK,EAAC,KAAG,EAACE,IAAI,CAACrB,MAAM;gBAAA,GAAlCsB,KAAK;kBAAAX,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAkC,CACjD;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACA,CAAC;YAAA,GANEI,KAAK,CAACK,GAAG;cAAAZ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAOd,CACL;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC;QAAA,GAbEE,MAAM,CAACO,GAAG;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAcf,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CACN,EACAlB,OAAO,CAACG,MAAM,CAACC,MAAM,GAAG,CAAC,iBACxBT,OAAA;MAAAa,QAAA,gBACEb,OAAA;QAAAa,QAAA,EAAI;MAAM;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACfvB,OAAA;QAAAa,QAAA,EACGR,OAAO,CAACG,MAAM,CAACgB,GAAG,CAAEG,KAAK,iBACxB3B,OAAA;UAAAa,QAAA,GACGc,KAAK,CAACC,KAAK,eACZ5B,OAAA;YAAAa,QAAA,EACGc,KAAK,CAACE,KAAK,CAACL,GAAG,CAAC,CAACM,IAAI,EAAEC,KAAK,kBAC3B/B,OAAA;cAAAa,QAAA,GAAiBiB,IAAI,CAACF,KAAK,EAAC,KAAG,EAACE,IAAI,CAACrB,MAAM;YAAA,GAAlCsB,KAAK;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAkC,CACjD;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC;QAAA,GANEI,KAAK,CAACK,GAAG;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAOd,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACrB,EAAA,CApEID,MAAM;AAAAgC,EAAA,GAANhC,MAAM;AAsEZ,eAAeA,MAAM;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}